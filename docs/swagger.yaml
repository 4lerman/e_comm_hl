basePath: /api/v1
definitions:
  types.CreateOrderItemPayload:
    properties:
      product_id:
        type: integer
      quantity:
        type: integer
    required:
    - product_id
    - quantity
    type: object
  types.CreateOrderPayload:
    properties:
      status:
        $ref: '#/definitions/types.OrderStatus'
      total:
        type: number
      user_id:
        type: integer
    required:
    - status
    - total
    - user_id
    type: object
  types.CreatePaymentPayload:
    properties:
      amount:
        type: number
      order_id:
        type: integer
      status:
        $ref: '#/definitions/types.PaymentStatus'
      user_id:
        type: integer
    required:
    - amount
    - order_id
    - user_id
    type: object
  types.CreateProductPayload:
    properties:
      category:
        type: string
      description:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    required:
    - category
    - name
    - price
    - quantity
    type: object
  types.CreateUserPayload:
    properties:
      address:
        type: string
      email:
        type: string
      full_name:
        type: string
      user_role:
        $ref: '#/definitions/types.UserRole'
    required:
    - address
    - email
    - full_name
    - user_role
    type: object
  types.Order:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      status:
        $ref: '#/definitions/types.OrderStatus'
      total:
        type: number
      user_id:
        type: integer
    type: object
  types.OrderStatus:
    enum:
    - new
    - in_process
    - done
    type: string
    x-enum-varnames:
    - New
    - In_Process
    - Done
  types.Payment:
    properties:
      amount:
        type: number
      id:
        type: integer
      order_id:
        type: integer
      payment_date:
        type: string
      status:
        $ref: '#/definitions/types.PaymentStatus'
      user_id:
        type: integer
    type: object
  types.PaymentStatus:
    enum:
    - success
    - failed
    type: string
    x-enum-varnames:
    - Success
    - Failed
  types.Product:
    properties:
      category:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
  types.UpdateOrderPayload:
    properties:
      status:
        $ref: '#/definitions/types.OrderStatus'
      total:
        type: number
      user_id:
        type: integer
    type: object
  types.UpdatePaymentPayload:
    properties:
      amount:
        type: number
      order_id:
        type: integer
      user_id:
        type: integer
    required:
    - amount
    - order_id
    - user_id
    type: object
  types.UpdateProductPayload:
    properties:
      category:
        type: string
      description:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
  types.UpdateUserPayload:
    properties:
      address:
        type: string
      full_name:
        type: string
      user_role:
        $ref: '#/definitions/types.UserRole'
    type: object
  types.User:
    properties:
      address:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      register_date:
        type: string
      user_role:
        $ref: '#/definitions/types.UserRole'
    type: object
  types.UserRole:
    enum:
    - admin
    - client
    type: string
    x-enum-varnames:
    - Admin
    - Client
host: e-comm-hl.onrender.com
info:
  contact: {}
  description: This is a API server for E-commerce service.
  title: E-commerce Service
  version: "1.0"
paths:
  /orders:
    get:
      consumes:
      - application/json
      description: Get details of all orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Order'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all orders
      tags:
      - orders
    post:
      consumes:
      - application/json
      description: Create a new order
      parameters:
      - description: Order payload
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/types.CreateOrderPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new order
      tags:
      - orders
  /orders/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an order
      tags:
      - orders
    get:
      consumes:
      - application/json
      description: Get order details by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Order'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get order by ID
      tags:
      - orders
    put:
      consumes:
      - application/json
      description: Update an existing order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: Order payload
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/types.UpdateOrderPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an order
      tags:
      - orders
  /orders/{id}/order:
    post:
      consumes:
      - application/json
      description: Create a new order item for an order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: Order item payload
        in: body
        name: orderItem
        required: true
        schema:
          $ref: '#/definitions/types.CreateOrderItemPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create an order item
      tags:
      - orders
  /orders/search:
    get:
      consumes:
      - application/json
      description: Get orders by status or user
      parameters:
      - description: Order status
        in: query
        name: status
        type: string
      - description: User ID
        in: query
        name: user
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Order'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get orders by query
      tags:
      - orders
  /payments:
    get:
      consumes:
      - application/json
      description: Get details of all payments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Payment'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all payments
      tags:
      - payments
    post:
      consumes:
      - application/json
      description: Create a new payment
      parameters:
      - description: Payment payload
        in: body
        name: payment
        required: true
        schema:
          $ref: '#/definitions/types.CreatePaymentPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a payment
      tags:
      - payments
  /payments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a payment by ID
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a payment
      tags:
      - payments
    get:
      consumes:
      - application/json
      description: Get payment details by ID
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Payment'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get payment by ID
      tags:
      - payments
    put:
      consumes:
      - application/json
      description: Update an existing payment
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      - description: Payment payload
        in: body
        name: payment
        required: true
        schema:
          $ref: '#/definitions/types.UpdatePaymentPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a payment
      tags:
      - payments
  /payments/search:
    get:
      consumes:
      - application/json
      description: Get payments by status, user, or order
      parameters:
      - description: Payment status
        in: query
        name: status
        type: string
      - description: User ID
        in: query
        name: user
        type: integer
      - description: Order ID
        in: query
        name: order
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Payment'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get payments by query
      tags:
      - payments
  /products:
    get:
      description: Get all products from the product service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Product'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product in the product service
      parameters:
      - description: Product to create
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/types.CreateProductPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new product
      tags:
      - products
  /products/{id}:
    delete:
      description: Delete a product in the product service
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a product
      tags:
      - products
    get:
      description: Get a product by ID from the product service
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Product'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get product by ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update a product in the product service
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product to update
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/types.UpdateProductPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a product
      tags:
      - products
  /products/search:
    get:
      description: Get products by name or category from the product service
      parameters:
      - description: Product name
        in: query
        name: name
        type: string
      - description: Product category
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Product'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get products by query
      tags:
      - products
  /users:
    get:
      description: Get all users from the user service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user in the user service
      parameters:
      - description: User to create
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/types.CreateUserPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      description: Delete a user in the user service
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a user
      tags:
      - users
    get:
      description: Get a user by ID from the user service
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.User'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user in the user service
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/types.UpdateUserPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a user
      tags:
      - users
  /users/search:
    get:
      description: Get users by name or email from the user service
      parameters:
      - description: User name
        in: query
        name: name
        type: string
      - description: User email
        in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get users by query
      tags:
      - users
swagger: "2.0"
